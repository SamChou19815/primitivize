plugins {
    id 'antlr'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.0'
    id 'org.jetbrains.dokka' version '0.9.17'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
}

group 'com.developersam'
version '0.1.0'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    antlr 'org.antlr:antlr4:4.7.2' // use ANTLR version 4
    implementation 'org.antlr:antlr4:4.5'
    implementation 'com.github.SamChou19815:okaml-lib:0.4.0'
    testImplementation 'junit:junit:4.12'
}

generateGrammarSource {
    outputDirectory = file("${project.rootDir}/src/main/java/com/developersam/primitivize/antlr")
    arguments += ['-package', 'com.developersam.primitivize.antlr', '-no-listener', '-visitor']
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjvm-default=enable"]
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = ["-Xjvm-default=enable"]
    }
}

compileJava.dependsOn generateGrammarSource
compileKotlin.dependsOn generateGrammarSource

dokka {
    outputFormat = 'html'
    outputDirectory = "../docs"
    jdkVersion = 8
    skipDeprecated = false
    skipEmptyPackages = true
    impliedPlatforms = ['JVM']
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

// Set the name of your main class here
mainClassName = 'Main'

shadowJar {
    baseName = 'primitivize'
    version = 0.1
    manifest {
        attributes 'Main-Class': mainClassName
    }
    zip64 true
    artifacts {
        shadow(tasks.shadowJar.archivePath) {
            builtBy shadowJar
        }
    }
}
